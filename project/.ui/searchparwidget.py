# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'searchbar.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.




class SearchBar(QtWidgets.QWidget):
    def __init__(self):
        super().__init__()
        self.setObjectName("SearchBar")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self)
        self.horizontalLayout.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout.setSpacing(0)
        self.toolButton = QtWidgets.QToolButton(self)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.toolButton.sizePolicy().hasHeightForWidth())
        self.toolButton.setSizePolicy(sizePolicy)
        self.toolButton.setCheckable(True)
        self.toolButton.setObjectName("SearchBar_toolButton")
        self.horizontalLayout.addWidget(self.toolButton)
        self.lineEdit = QtWidgets.QLineEdit(self)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        self.lineEdit.setSizePolicy(sizePolicy)
        self.lineEdit.setMaxLength(50)
        self.lineEdit.setObjectName("SearchBar_lineEdit")
        self.horizontalLayout.addWidget(self.lineEdit)
        self.horizontalLayout.setStretch(1, 1)
        self.setAutoFillBackground(True)
        self.animation = QtCore.QPropertyAnimation(self.lineEdit,b'size')
        self.animation.setEasingCurve(QtCore.QEasingCurve.Type.InOutSine)
        self.animation.setDuration(1000)
        self.__normalsize = self.lineEdit.size()
        self.animation.setStartValue(QtCore.QSize(0,0))
        self.animation.setEndValue(self.__normalsize)
        self.toolButton.clicked.connect(self.animate)
        
    def setLineBaseSize(self , size:QtCore.QSize):
        self.__normalsize = size

    def animate(self):
        print(self.lineEdit.size())
        if self.toolButton.isChecked():
            self.animation.setDirection(self.animation.Direction.Forward)
            self.animation.start()
        else :
            self.animation.setDirection(self.animation.Direction.Backward)
            self.animation.start()


        


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    ui = SearchBar()
    ui.show()
    sys.exit(app.exec_())
